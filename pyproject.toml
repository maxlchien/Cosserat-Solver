[project]
name = "cosserat-solver"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "maxlchien", email = "90492587+maxlchien@users.noreply.github.com" }
]
requires-python = ">=3.12"
dependencies = ["numpy", "scipy", "mpmath", "matplotlib", "obspy"]


[dependency-groups]
test = ["pytest"]
dev = [{ include-group = "test"}]
nox = [
    "nox>=2025.5.1",
    "nox-uv>=0.6.2",
]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR",    # Design related pylint codes
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[project.scripts]
cosserat-solver = "cosserat_solver:main"

[build-system]
requires = ["uv_build>=0.8.15,<0.9.0"]
build-backend = "uv_build"

[tool.pytest.ini_options]
addopts = ["--strict-config"]
testpaths = ["tests"]
